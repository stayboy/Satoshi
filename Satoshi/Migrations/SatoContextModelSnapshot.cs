// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Satoshi.Contexts;

#nullable disable

namespace Satoshi.Migrations
{
    [DbContext(typeof(SatoContext))]
    partial class SatoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.0");

            modelBuilder.Entity("Satoshi.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CustomerName")
                        .HasMaxLength(150)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("TEXT");

                    b.Property<float>("Price")
                        .HasColumnType("REAL");

                    b.Property<int>("ProductId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Orders", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CustomerName = "Dave",
                            DateCreated = new DateTime(2021, 12, 6, 23, 28, 1, 873, DateTimeKind.Utc).AddTicks(1766),
                            Price = 900f,
                            ProductId = 1,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            CustomerName = "George",
                            DateCreated = new DateTime(2021, 12, 6, 23, 28, 1, 873, DateTimeKind.Utc).AddTicks(1768),
                            Price = 35f,
                            ProductId = 2,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            CustomerName = "Fiona",
                            DateCreated = new DateTime(2021, 12, 6, 23, 28, 1, 873, DateTimeKind.Utc).AddTicks(1768),
                            Price = 5f,
                            ProductId = 3,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            CustomerName = "Rory",
                            DateCreated = new DateTime(2021, 12, 6, 23, 28, 1, 873, DateTimeKind.Utc).AddTicks(1769),
                            Price = 3f,
                            ProductId = 3,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            CustomerName = "Olivia",
                            DateCreated = new DateTime(2021, 12, 6, 23, 28, 1, 873, DateTimeKind.Utc).AddTicks(1769),
                            Price = 600f,
                            ProductId = 1,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Satoshi.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("TEXT");

                    b.Property<float>("Price")
                        .HasColumnType("REAL");

                    b.Property<string>("ProductName")
                        .HasMaxLength(120)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Products", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateCreated = new DateTime(2021, 12, 6, 23, 28, 1, 873, DateTimeKind.Utc).AddTicks(1670),
                            Price = 900f,
                            ProductName = "Laptop",
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            DateCreated = new DateTime(2021, 12, 6, 23, 28, 1, 873, DateTimeKind.Utc).AddTicks(1672),
                            Price = 35f,
                            ProductName = "Keyboard",
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            DateCreated = new DateTime(2021, 12, 6, 23, 28, 1, 873, DateTimeKind.Utc).AddTicks(1672),
                            Price = 5f,
                            ProductName = "Paper",
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Satoshi.Models.Order", b =>
                {
                    b.HasOne("Satoshi.Models.Product", "Product")
                        .WithMany("Orders")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Satoshi.Models.Product", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
